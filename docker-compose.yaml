version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    volumes:
      - ./.env:/app/.env
      - ./migrations:/app/migrations
    depends_on:
      - postgres
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 1s
      retries: 5

  migrations:
    build: .
    image: myapp/migrations
    depends_on:
      - postgres
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=postgres port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB}
      - GOOSE_VERBOSE=true
    volumes:
      - ./migrations:/app/migrations
    entrypoint: ["/app/entrypoint.sh"]

  # Приклад залежного додатку
  # my_app:
  #  depends_on:
  #    migrations:
  #      condition: service_completed_successfully